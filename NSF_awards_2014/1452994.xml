<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: A Hardware and Software Architecture for Data-Centric Parallel Computing</AwardTitle>
    <AwardEffectiveDate>02/15/2015</AwardEffectiveDate>
    <AwardExpirationDate>01/31/2020</AwardExpirationDate>
    <AwardAmount>200000</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Div Of Computer &amp; Communication Foundati</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Hong Jiang</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Energy efficiency is the key challenge facing computer systems. To improve&lt;br/&gt;performance under a limited energy budget, systems are becoming increasingly&lt;br/&gt;parallel, featuring many smaller and simpler cores, and heterogeneous,&lt;br/&gt;featuring cores specialized for certain tasks. Even with these improvements,&lt;br/&gt;two critical challenges remain. First, without reducing data movement, memory&lt;br/&gt;accesses and communication will dominate energy consumption. Thus, limiting&lt;br/&gt;data movement must become a primary design objective. Second, these systems&lt;br/&gt;will be highly complex, and will need powerful abstractions to shield&lt;br/&gt;programmers from this complexity. Current systems are designed in a&lt;br/&gt;computation-centric way that is a poor match for these challenges. Memory&lt;br/&gt;hierarchies are hardware-managed and opaque to software, which needlessly&lt;br/&gt;increases data movement; and runtimes lack the proper hardware mechanisms and&lt;br/&gt;software policies to manage heterogeneous resources efficiently.&lt;br/&gt;&lt;br/&gt;This research project takes a holistic approach to addressing these challenges, by&lt;br/&gt;co-designing an architecture and runtime system that efficiently run dynamic&lt;br/&gt;parallel applications on systems with heterogeneous cores and memories.&lt;br/&gt;Redesigning hardware to be directly exploited by a dynamic runtime enables (a)&lt;br/&gt;many more opportunities to reduce data movement, (b) better usage of&lt;br/&gt;heterogeneous resources, and (c) much faster adaptation to changing application&lt;br/&gt;needs and available resources. Three key components underlie this design.&lt;br/&gt;First, a scalable memory system incorporates combinations of heterogeneous&lt;br/&gt;memory technologies to improve efficiency, and exposes them to software, which&lt;br/&gt;can divide these physical memories into many virtual cache and memory&lt;br/&gt;hierarchies to finely control data placement. Second, specialized programmable&lt;br/&gt;engines orchestrate communication among cores, accelerate intensive runtime&lt;br/&gt;functions such as load balancing, and monitor how tasks use hardware resources&lt;br/&gt;to guide runtime decisions. Third, a hardware-accelerated runtime leverages&lt;br/&gt;this novel architectural support to place data and computation to minimize data&lt;br/&gt;movement, use the most suitable core for each task, and quickly respond to&lt;br/&gt;changing application needs. This runtime targets a high-level programming model&lt;br/&gt;that lets programmers express fine-grained and irregular task, data, and&lt;br/&gt;pipeline parallelism. These techniques build on an analytical design approach&lt;br/&gt;that makes hardware easy to understand and predict, and enables runtimes to&lt;br/&gt;navigate multi-dimensional tradeoffs efficiently.&lt;br/&gt;&lt;br/&gt;If successful, this project will make heterogeneous systems more efficient,&lt;br/&gt;more broadly applicable, and easier to program. It will especially benefit&lt;br/&gt;applications with dynamic and fine-grained parallelism, advancing key emerging&lt;br/&gt;domains where these workloads are pervasive, such as graph analytics and online&lt;br/&gt;data-intensive services. In addition, the infrastructure developed as part of&lt;br/&gt;this project will be publicly released, enabling others to build on the results&lt;br/&gt;of this work.</AbstractNarration>
    <MinAmdLetterDate>01/21/2015</MinAmdLetterDate>
    <MaxAmdLetterDate>01/21/2015</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1452994</AwardID>
    <Investigator>
      <FirstName>Daniel</FirstName>
      <LastName>Sanchez Martin</LastName>
      <EmailAddress>sanchez@csail.mit.edu</EmailAddress>
      <StartDate>01/21/2015</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Massachusetts Institute of Technology</Name>
      <CityName>Cambridge</CityName>
      <ZipCode>021394301</ZipCode>
      <PhoneNumber>6172531000</PhoneNumber>
      <StreetAddress>77 MASSACHUSETTS AVE</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Massachusetts</StateName>
      <StateCode>MA</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7941</Code>
      <Text>COMPUTER ARCHITECTURE</Text>
    </ProgramReference>
  </Award>
</rootTag>
