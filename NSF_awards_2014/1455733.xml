<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CAREER: Input-Centric Program Behavior Analysis and Adaptation</AwardTitle>
    <AwardEffectiveDate>07/28/2014</AwardEffectiveDate>
    <AwardExpirationDate>08/31/2016</AwardExpirationDate>
    <AwardAmount>266165</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Div Of Computer &amp; Communication Foundati</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Almadena Y. Chtchelkanova</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>By analyzing and predicting program dynamic behaviors, program behavior analysis offers the fundamental support for program transformations and resource management. Its effectiveness is crucial for the maximization of computing efficiency. This research proposes to include program inputs---a so far virtually ignored dimension---into the focus of program behavior analysis, cultivating a new paradigm, namely input-centric program behavior analysis and adaptation. This input-centric paradigm will create many new opportunities for enhancing the matching between software and hardware, hence significantly improving the performance and power efficiency in modern computing.&lt;br/&gt;&lt;br/&gt;The proposed technique, input-centric program behavior analysis and adaptation, consists of three components. The first two components, program input characterization and input-behavior modeling, resolve the complexities of program inputs, extract important features, and recognize the correlations between characterized input features and program behaviors. The third component, input-centric adaptation, capitalizes on the novel opportunities that the first two components create, making dynamic optimizations proactive and holistic, but without losing the adaptivity to inputs and environmental changes. Together, the three components make evolvable programming systems more feasible than before. In such a system, the input-behavior models embody the central knowledge base, which grows incrementally across program production runs. As the knowledge base becomes larger, behavior prediction becomes more accurate, stimulating better software-hardware matching and making the program and runtime systems perform increasingly better. Because of the fundamental role of program behavior analysis in software-hardware matching, this research helps pave the way for advancing the optimizations in various layers in the software execution stack (compilers, virtual machines, OS, etc.).</AbstractNarration>
    <MinAmdLetterDate>08/28/2014</MinAmdLetterDate>
    <MaxAmdLetterDate>08/28/2014</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1455733</AwardID>
    <Investigator>
      <FirstName>Xipeng</FirstName>
      <LastName>Shen</LastName>
      <EmailAddress>xshen5@ncsu.edu</EmailAddress>
      <StartDate>08/28/2014</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>North Carolina State University</Name>
      <CityName>RALEIGH</CityName>
      <ZipCode>276957514</ZipCode>
      <PhoneNumber>9195152444</PhoneNumber>
      <StreetAddress>CAMPUS BOX 7514</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>North Carolina</StateName>
      <StateCode>NC</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>1045</Code>
      <Text>CAREER: FACULTY EARLY CAR DEV</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>7942</Code>
      <Text>HIGH-PERFORMANCE COMPUTING</Text>
    </ProgramReference>
  </Award>
</rootTag>
