<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>CRII: SHF: SimDB: An Automated Framework to Debug System-level Concurrency Faults</AwardTitle>
    <AwardEffectiveDate>03/01/2015</AwardEffectiveDate>
    <AwardExpirationDate>02/28/2017</AwardExpirationDate>
    <AwardAmount>174648</AwardAmount>
    <AwardInstrument>
      <Value>Standard Grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Sol J. Greenspan</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>Modern computer systems utilize multiple CPUs, connect to a large array of peripheral devices, and sense their surroundings through various sensors and actuators. The increasing complexity of these systems can cause software that runs on them to suffer from deployment failures due to various forms of concurrency faults. When a software failure occurs in the deployed system, developers need to debug the system and find the cause of the failure in a timely manner. Unfortunately, debugging large complex concurrent software systems is difficult. This is because concurrency faults occur ?intermittently? and are thus difficult to reproduce, unless there is a specific interleaving that can cause such faults to occur. For example, a failure may involve participation of various software components and system events; reproducing these may require recreating a combination of many factors or specific system environment settings (e.g., hardware,network). &lt;br/&gt;&lt;br/&gt;The goal of this project is to provide an automated framework that allows engineers to effectively debug system-level concurrency faults in deployed systems. To achieve this goal, the project will investigate and develop advanced static and dynamic analysis techniques. Specifically, it will (i) develop light-weight static analysis techniques that can identify potential failure-inducing program paths; (ii) develop dynamic analysis techniques by using virtualization to effectively reproduce failures that occur in the deployed systems due to nondeterministic and heterogeneous system events; (iii) implement an automated debugging framework that provides rich user interfaces to facilitate in-house debugging processes. The outcome of this project will be a framework that is scalable, transparent, and capable of dealing with broad classes of concurrency faults. The process by which the framework is employed is mostly automated so it requires little human intervention. As such, the framework is expected to help developers understand and correct failures in deployed systems, with benefits to all who depend on such systems.</AbstractNarration>
    <MinAmdLetterDate>03/23/2015</MinAmdLetterDate>
    <MaxAmdLetterDate>03/23/2015</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>1464032</AwardID>
    <Investigator>
      <FirstName>Tingting</FirstName>
      <LastName>Yu</LastName>
      <EmailAddress>tyu@cs.uky.edu</EmailAddress>
      <StartDate>03/23/2015</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>University of Kentucky Research Foundation</Name>
      <CityName>Lexington</CityName>
      <ZipCode>405060057</ZipCode>
      <PhoneNumber>8592579420</PhoneNumber>
      <StreetAddress>109 Kinkead Hall</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>Kentucky</StateName>
      <StateCode>KY</StateCode>
    </Institution>
    <ProgramElement>
      <Code>7798</Code>
      <Text>SOFTWARE &amp; HARDWARE FOUNDATION</Text>
    </ProgramElement>
    <ProgramElement>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramElement>
    <ProgramReference>
      <Code>7944</Code>
      <Text>SOFTWARE ENG &amp; FORMAL METHODS</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>8228</Code>
      <Text>CISE Resrch Initiatn Initiatve</Text>
    </ProgramReference>
    <ProgramReference>
      <Code>9150</Code>
      <Text>EXP PROG TO STIM COMP RES</Text>
    </ProgramReference>
  </Award>
</rootTag>
